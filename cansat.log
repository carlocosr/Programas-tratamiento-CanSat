2025-04-04 01:37:42 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-04 01:37:42 | INFO     | Cargando datos desde: datos.csv
2025-04-04 01:37:42 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 01:37:45 | INFO     | Gráficos generados exitosamente
2025-04-04 01:37:46 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-04 01:37:46 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-04 01:37:46 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-04 01:37:46 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-04 01:54:12 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-04 01:54:12 | INFO     | Cargando datos desde: datos.csv
2025-04-04 01:54:12 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 01:54:12 | INFO     | Gráficos generados exitosamente
2025-04-04 01:54:12 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-04 01:54:12 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-04 01:54:12 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-04 01:54:12 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-04 01:54:41 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-04 01:54:41 | INFO     | Cargando datos desde: datos.csv
2025-04-04 01:54:41 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 01:54:41 | INFO     | Gráficos generados exitosamente
2025-04-04 01:54:41 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-04 01:54:41 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-04 01:54:41 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-04 01:54:41 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-04 02:43:29 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-04 02:43:29 | INFO     | Cargando datos desde: datos.csv
2025-04-04 02:43:29 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 02:43:33 | INFO     | Gráficos generados exitosamente
2025-04-04 02:43:34 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-04 02:43:34 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-04 02:43:34 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-04 02:43:34 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-04 02:49:23 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-04 02:49:23 | INFO     | Cargando datos desde: datos.csv
2025-04-04 02:49:23 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 02:49:23 | INFO     | Gráficos generados exitosamente
2025-04-04 02:49:23 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-04 02:49:23 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-04 02:49:24 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-04 02:49:24 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-04 02:50:56 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-04 02:50:56 | INFO     | Cargando datos desde: datos.csv
2025-04-04 02:50:56 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 02:50:56 | INFO     | Gráficos generados exitosamente
2025-04-04 02:50:56 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-04 02:50:56 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-04 02:50:56 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-04 02:50:56 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-04 02:55:01 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-04 02:55:01 | INFO     | Cargando datos desde: datos.csv
2025-04-04 02:55:01 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 02:55:02 | INFO     | Gráficos generados exitosamente
2025-04-04 02:55:02 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-04 02:55:02 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-04 02:55:02 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-04 02:55:02 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-04 20:59:09 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 20:59:09 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 20:59:09 | INFO     | Gráficos generados exitosamente
2025-04-04 20:59:09 | INFO     | Gráficos generados exitosamente
2025-04-04 20:59:44 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 20:59:44 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 20:59:44 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 20:59:44 | INFO     | Gráficos generados exitosamente
2025-04-04 20:59:44 | INFO     | Gráficos generados exitosamente
2025-04-04 20:59:44 | INFO     | Gráficos generados exitosamente
2025-04-04 20:59:56 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 20:59:56 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 20:59:56 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 20:59:56 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-04 20:59:56 | INFO     | Gráficos generados exitosamente
2025-04-04 20:59:56 | INFO     | Gráficos generados exitosamente
2025-04-04 20:59:56 | INFO     | Gráficos generados exitosamente
2025-04-04 20:59:56 | INFO     | Gráficos generados exitosamente
2025-04-05 00:11:10 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:11:10 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:11:10 | INFO     | Gráficos generados exitosamente
2025-04-05 00:11:10 | INFO     | Gráficos generados exitosamente
2025-04-05 00:14:17 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:14:17 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:14:18 | INFO     | Gráficos generados exitosamente
2025-04-05 00:14:18 | INFO     | Gráficos generados exitosamente
2025-04-05 00:18:52 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:18:52 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:18:52 | INFO     | Gráficos generados exitosamente
2025-04-05 00:18:52 | INFO     | Gráficos generados exitosamente
2025-04-05 00:19:41 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:19:41 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:19:41 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:19:41 | INFO     | Gráficos generados exitosamente
2025-04-05 00:19:41 | INFO     | Gráficos generados exitosamente
2025-04-05 00:19:41 | INFO     | Gráficos generados exitosamente
2025-04-05 00:21:53 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:21:53 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:21:53 | INFO     | Gráficos generados exitosamente
2025-04-05 00:21:53 | INFO     | Gráficos generados exitosamente
2025-04-05 00:21:55 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:21:55 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:21:55 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:21:55 | INFO     | Gráficos generados exitosamente
2025-04-05 00:21:55 | INFO     | Gráficos generados exitosamente
2025-04-05 00:21:55 | INFO     | Gráficos generados exitosamente
2025-04-05 00:22:10 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:22:10 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:22:10 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:22:10 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:22:10 | INFO     | Gráficos generados exitosamente
2025-04-05 00:22:10 | INFO     | Gráficos generados exitosamente
2025-04-05 00:22:10 | INFO     | Gráficos generados exitosamente
2025-04-05 00:22:10 | INFO     | Gráficos generados exitosamente
2025-04-05 00:22:13 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:22:13 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:22:13 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:22:13 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:22:13 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-05 00:22:13 | INFO     | Gráficos generados exitosamente
2025-04-05 00:22:13 | INFO     | Gráficos generados exitosamente
2025-04-05 00:22:13 | INFO     | Gráficos generados exitosamente
2025-04-05 00:22:13 | INFO     | Gráficos generados exitosamente
2025-04-05 00:22:13 | INFO     | Gráficos generados exitosamente
2025-04-06 02:23:45 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 02:23:45 | INFO     | Cargando datos desde: datos.csv
2025-04-06 02:23:45 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 02:23:48 | ERROR    | Error generando gráficos: No module named 'statsmodels'
Traceback (most recent call last):
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\programa_gráficas_html.py", line 190, in generar_graficas_interactivas
    fig5a = px.scatter(df, x='Altitude', y='Pressure',
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_chart_types.py", line 69, in scatter
    return make_figure(args=locals(), constructor=go.Scatter)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 2670, in make_figure
    patch, fit_results = make_trace_kwargs(
                         ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 430, in make_trace_kwargs
    y_out, hover_header, fit_results = trendline_function(
                                       ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\trendline_functions\__init__.py", line 42, in ols
    import statsmodels.api as sm
ModuleNotFoundError: No module named 'statsmodels'
2025-04-06 02:23:48 | CRITICAL | Error no controlado: No module named 'statsmodels'
Traceback (most recent call last):
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\programa_gráficas_html.py", line 223, in main
    figuras = generar_graficas_interactivas(df)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\programa_gráficas_html.py", line 190, in generar_graficas_interactivas
    fig5a = px.scatter(df, x='Altitude', y='Pressure',
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_chart_types.py", line 69, in scatter
    return make_figure(args=locals(), constructor=go.Scatter)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 2670, in make_figure
    patch, fit_results = make_trace_kwargs(
                         ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 430, in make_trace_kwargs
    y_out, hover_header, fit_results = trendline_function(
                                       ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\trendline_functions\__init__.py", line 42, in ols
    import statsmodels.api as sm
ModuleNotFoundError: No module named 'statsmodels'
2025-04-06 02:25:35 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 02:25:35 | INFO     | Cargando datos desde: datos.csv
2025-04-06 02:25:35 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 02:25:35 | ERROR    | Error generando gráficos: No module named 'statsmodels'
Traceback (most recent call last):
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\prueba.py", line 190, in generar_graficas_interactivas
    fig5a = px.scatter(df, x='Altitude', y='Pressure',
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_chart_types.py", line 69, in scatter
    return make_figure(args=locals(), constructor=go.Scatter)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 2670, in make_figure
    patch, fit_results = make_trace_kwargs(
                         ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 430, in make_trace_kwargs
    y_out, hover_header, fit_results = trendline_function(
                                       ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\trendline_functions\__init__.py", line 42, in ols
    import statsmodels.api as sm
ModuleNotFoundError: No module named 'statsmodels'
2025-04-06 02:25:35 | CRITICAL | Error no controlado: No module named 'statsmodels'
Traceback (most recent call last):
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\prueba.py", line 223, in main
    figuras = generar_graficas_interactivas(df)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\prueba.py", line 190, in generar_graficas_interactivas
    fig5a = px.scatter(df, x='Altitude', y='Pressure',
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_chart_types.py", line 69, in scatter
    return make_figure(args=locals(), constructor=go.Scatter)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 2670, in make_figure
    patch, fit_results = make_trace_kwargs(
                         ^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 430, in make_trace_kwargs
    y_out, hover_header, fit_results = trendline_function(
                                       ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\trendline_functions\__init__.py", line 42, in ols
    import statsmodels.api as sm
ModuleNotFoundError: No module named 'statsmodels'
2025-04-06 02:26:58 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 02:26:58 | INFO     | Cargando datos desde: datos.csv
2025-04-06 02:26:58 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 02:27:06 | INFO     | Gráficos generados exitosamente
2025-04-06 02:27:07 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 02:27:07 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 02:27:07 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 02:27:07 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 02:27:07 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 02:27:07 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 02:27:07 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 02:27:07 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 02:29:42 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 02:29:42 | INFO     | Cargando datos desde: datos.csv
2025-04-06 02:29:42 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 02:29:44 | ERROR    | Error generando gráficos: Value of 'x' is not the name of a column in 'data_frame'. Expected one of ['Tag', 'Index', 'Temperature', 'Pressure', 'Altitude', 'AccX', 'AccY', 'AccZ', 'GyroX', 'GyroY', 'GyroZ', 'GPS_Lat', 'GPS_Lon', 'Date', 'Time'] but received: Altitud
Traceback (most recent call last):
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\prueba.py", line 192, in generar_graficas_interactivas
    fig5b = px.scatter(df, x='Altitud', y='Temperatura',
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_chart_types.py", line 69, in scatter
    return make_figure(args=locals(), constructor=go.Scatter)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 2479, in make_figure
    args = build_dataframe(args, constructor)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 1727, in build_dataframe
    df_output, wide_id_vars = process_args_into_dataframe(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 1328, in process_args_into_dataframe
    raise ValueError(err_msg)
ValueError: Value of 'x' is not the name of a column in 'data_frame'. Expected one of ['Tag', 'Index', 'Temperature', 'Pressure', 'Altitude', 'AccX', 'AccY', 'AccZ', 'GyroX', 'GyroY', 'GyroZ', 'GPS_Lat', 'GPS_Lon', 'Date', 'Time'] but received: Altitud
2025-04-06 02:29:44 | CRITICAL | Error no controlado: Value of 'x' is not the name of a column in 'data_frame'. Expected one of ['Tag', 'Index', 'Temperature', 'Pressure', 'Altitude', 'AccX', 'AccY', 'AccZ', 'GyroX', 'GyroY', 'GyroZ', 'GPS_Lat', 'GPS_Lon', 'Date', 'Time'] but received: Altitud
Traceback (most recent call last):
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\prueba.py", line 223, in main
    figuras = generar_graficas_interactivas(df)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\prueba.py", line 192, in generar_graficas_interactivas
    fig5b = px.scatter(df, x='Altitud', y='Temperatura',
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_chart_types.py", line 69, in scatter
    return make_figure(args=locals(), constructor=go.Scatter)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 2479, in make_figure
    args = build_dataframe(args, constructor)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 1727, in build_dataframe
    df_output, wide_id_vars = process_args_into_dataframe(
                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\express\_core.py", line 1328, in process_args_into_dataframe
    raise ValueError(err_msg)
ValueError: Value of 'x' is not the name of a column in 'data_frame'. Expected one of ['Tag', 'Index', 'Temperature', 'Pressure', 'Altitude', 'AccX', 'AccY', 'AccZ', 'GyroX', 'GyroY', 'GyroZ', 'GPS_Lat', 'GPS_Lon', 'Date', 'Time'] but received: Altitud
2025-04-06 02:31:34 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 02:31:34 | INFO     | Cargando datos desde: datos.csv
2025-04-06 02:31:34 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 02:31:35 | INFO     | Gráficos generados exitosamente
2025-04-06 02:31:35 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 02:31:35 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 02:31:35 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 02:31:35 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 02:31:35 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 02:31:35 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 02:31:35 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 02:31:35 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 02:32:23 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 02:32:23 | INFO     | Cargando datos desde: datos.csv
2025-04-06 02:32:23 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 02:32:24 | INFO     | Gráficos generados exitosamente
2025-04-06 02:32:24 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 02:32:24 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 02:32:24 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 02:32:24 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 02:32:24 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 02:32:24 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 02:32:24 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 02:32:24 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 02:48:21 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 02:48:21 | INFO     | Cargando datos desde: datos.csv
2025-04-06 02:48:21 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 02:48:22 | INFO     | Gráficos generados exitosamente
2025-04-06 02:48:22 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 02:48:23 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 02:48:23 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 02:48:24 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 02:48:25 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 02:48:25 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 02:48:26 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 02:48:26 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 03:11:34 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 03:11:34 | INFO     | Cargando datos desde: datos.csv
2025-04-06 03:11:34 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 03:11:35 | INFO     | Gráficos generados exitosamente
2025-04-06 03:11:36 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 03:11:36 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 03:11:37 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 03:11:37 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 03:11:38 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 03:11:39 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 03:11:39 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 03:11:39 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 03:13:55 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 03:13:55 | INFO     | Cargando datos desde: datos.csv
2025-04-06 03:13:55 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 03:13:56 | INFO     | Gráficos generados exitosamente
2025-04-06 03:13:57 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 03:13:57 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 03:13:58 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 03:13:59 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 03:13:59 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 03:14:00 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 03:14:01 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 03:14:01 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 03:17:04 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 03:17:04 | INFO     | Cargando datos desde: datos.csv
2025-04-06 03:17:04 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 03:17:05 | INFO     | Gráficos generados exitosamente
2025-04-06 03:17:06 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 03:17:06 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 03:17:07 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 03:17:08 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 03:17:08 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 03:17:09 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 03:17:10 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 03:17:10 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 03:18:01 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 03:18:01 | INFO     | Cargando datos desde: datos.csv
2025-04-06 03:18:01 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 03:18:02 | INFO     | Gráficos generados exitosamente
2025-04-06 03:18:02 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 03:18:03 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 03:18:03 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 03:18:04 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 03:18:05 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 03:18:05 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 03:18:06 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 03:18:06 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 03:19:59 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 03:19:59 | INFO     | Cargando datos desde: datos.csv
2025-04-06 03:19:59 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 03:20:00 | INFO     | Gráficos generados exitosamente
2025-04-06 03:20:01 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 03:20:02 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 03:20:02 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 03:20:03 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 03:20:03 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 03:20:04 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 03:20:05 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 03:20:05 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 03:27:27 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 03:27:27 | INFO     | Cargando datos desde: datos.csv
2025-04-06 03:27:27 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 03:27:28 | INFO     | Gráficos generados exitosamente
2025-04-06 03:27:29 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 03:27:29 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 03:27:30 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 03:27:31 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 03:27:31 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 03:27:32 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 03:27:33 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 03:27:33 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 03:36:57 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 03:36:57 | INFO     | Cargando datos desde: datos.csv
2025-04-06 03:36:57 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 03:36:59 | INFO     | Gráficos generados exitosamente
2025-04-06 03:36:59 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 03:37:00 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 03:37:00 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 03:37:01 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 03:37:02 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 03:37:02 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 03:37:03 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 03:37:03 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 03:43:43 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 03:43:43 | INFO     | Cargando datos desde: datos.csv
2025-04-06 03:43:43 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 03:43:44 | INFO     | Gráficos generados exitosamente
2025-04-06 03:43:45 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 03:43:46 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 03:43:46 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 03:43:47 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 03:43:47 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 03:43:48 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 03:43:49 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 03:43:49 | CRITICAL | Error no controlado: name 'archivo_csv' is not defined
Traceback (most recent call last):
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\prueba.py", line 466, in main
    datos_gps = leer_datos_csv(archivo_csv)
                               ^^^^^^^^^^^
NameError: name 'archivo_csv' is not defined. Did you mean: 'archivo_kml'?
2025-04-06 03:44:14 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 03:44:14 | INFO     | Cargando datos desde: datos.csv
2025-04-06 03:44:14 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 03:44:15 | INFO     | Gráficos generados exitosamente
2025-04-06 03:44:16 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 03:44:16 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 03:44:17 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 03:44:17 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 03:44:18 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 03:44:18 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 03:44:19 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 03:44:19 | CRITICAL | Error no controlado: name 'csv' is not defined
Traceback (most recent call last):
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\prueba.py", line 466, in main
    datos_gps = leer_datos_csv('datos.csv')
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\prueba.py", line 427, in leer_datos_csv
    reader = csv.reader(file)
             ^^^
NameError: name 'csv' is not defined. Did you forget to import 'csv'
2025-04-06 03:46:01 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 03:46:01 | INFO     | Cargando datos desde: datos.csv
2025-04-06 03:46:01 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 03:46:02 | INFO     | Gráficos generados exitosamente
2025-04-06 03:46:03 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 03:46:03 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 03:46:04 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 03:46:05 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 03:46:05 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 03:46:06 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 03:46:06 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 03:46:06 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 10:24:12 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 10:24:12 | INFO     | Cargando datos desde: datos.csv
2025-04-06 10:24:12 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 10:24:23 | INFO     | Gráficos generados exitosamente
2025-04-06 10:24:24 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 10:24:25 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 10:24:26 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 10:24:27 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 10:24:27 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 10:24:28 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 10:24:28 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 10:24:28 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 14:16:10 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 14:16:10 | INFO     | Cargando datos desde: datos.csv
2025-04-06 14:16:10 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 14:16:12 | INFO     | Gráficos generados exitosamente
2025-04-06 14:16:12 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 14:16:13 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 14:16:13 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 14:16:14 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 14:16:15 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 14:16:15 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 14:16:16 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 14:16:16 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 14:18:26 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 14:18:26 | INFO     | Cargando datos desde: datos.csv
2025-04-06 14:18:26 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 14:18:28 | INFO     | Gráficos generados exitosamente
2025-04-06 14:18:28 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 14:18:29 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 14:18:29 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 14:18:30 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 14:18:31 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 14:18:31 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 14:18:32 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 14:18:32 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 14:21:33 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 14:21:33 | INFO     | Cargando datos desde: datos.csv
2025-04-06 14:21:33 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 14:21:34 | INFO     | Gráficos generados exitosamente
2025-04-06 14:21:35 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 14:21:35 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 14:21:36 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 14:21:37 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 14:21:37 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 14:21:38 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 14:21:38 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 14:21:39 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 15:37:40 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 15:37:40 | INFO     | Cargando datos desde: datos.csv
2025-04-06 15:37:40 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 15:37:40 | ERROR    | Error generando gráficos: 
    Invalid value of type 'builtins.str' received for the 'color' property of layout.annotation.font
        Received value: '#a40000ff'

    The 'color' property is a color and may be specified as:
      - A hex string (e.g. '#ff0000')
      - An rgb/rgba string (e.g. 'rgb(255,0,0)')
      - An hsl/hsla string (e.g. 'hsl(0,100%,50%)')
      - An hsv/hsva string (e.g. 'hsv(0,100%,100%)')
      - A named CSS color:
            aliceblue, antiquewhite, aqua, aquamarine, azure,
            beige, bisque, black, blanchedalmond, blue,
            blueviolet, brown, burlywood, cadetblue,
            chartreuse, chocolate, coral, cornflowerblue,
            cornsilk, crimson, cyan, darkblue, darkcyan,
            darkgoldenrod, darkgray, darkgrey, darkgreen,
            darkkhaki, darkmagenta, darkolivegreen, darkorange,
            darkorchid, darkred, darksalmon, darkseagreen,
            darkslateblue, darkslategray, darkslategrey,
            darkturquoise, darkviolet, deeppink, deepskyblue,
            dimgray, dimgrey, dodgerblue, firebrick,
            floralwhite, forestgreen, fuchsia, gainsboro,
            ghostwhite, gold, goldenrod, gray, grey, green,
            greenyellow, honeydew, hotpink, indianred, indigo,
            ivory, khaki, lavender, lavenderblush, lawngreen,
            lemonchiffon, lightblue, lightcoral, lightcyan,
            lightgoldenrodyellow, lightgray, lightgrey,
            lightgreen, lightpink, lightsalmon, lightseagreen,
            lightskyblue, lightslategray, lightslategrey,
            lightsteelblue, lightyellow, lime, limegreen,
            linen, magenta, maroon, mediumaquamarine,
            mediumblue, mediumorchid, mediumpurple,
            mediumseagreen, mediumslateblue, mediumspringgreen,
            mediumturquoise, mediumvioletred, midnightblue,
            mintcream, mistyrose, moccasin, navajowhite, navy,
            oldlace, olive, olivedrab, orange, orangered,
            orchid, palegoldenrod, palegreen, paleturquoise,
            palevioletred, papayawhip, peachpuff, peru, pink,
            plum, powderblue, purple, red, rosybrown,
            royalblue, rebeccapurple, saddlebrown, salmon,
            sandybrown, seagreen, seashell, sienna, silver,
            skyblue, slateblue, slategray, slategrey, snow,
            springgreen, steelblue, tan, teal, thistle, tomato,
            turquoise, violet, wheat, white, whitesmoke,
            yellow, yellowgreen
Traceback (most recent call last):
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\programa_gráficas_html.py", line 229, in generar_graficas_interactivas
    fig3.update_layout(
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\graph_objs\_figure.py", line 787, in update_layout
    return super(Figure, self).update_layout(dict1, overwrite, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 1392, in update_layout
    self.layout.update(dict1, overwrite=overwrite, **kwargs)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 5123, in update
    BaseFigure._perform_update(self, kwargs, overwrite=overwrite)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 3910, in _perform_update
    BaseFigure._perform_update(plotly_obj[key], val)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 3942, in _perform_update
    BaseFigure._perform_update(plotly_element, update_element)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 3905, in _perform_update
    BaseFigure._perform_update(plotly_obj[key], val)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 3926, in _perform_update
    plotly_obj[key] = val
    ~~~~~~~~~~^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 4860, in __setitem__
    self._set_prop(prop, value)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 5204, in _set_prop
    raise err
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 5199, in _set_prop
    val = validator.validate_coerce(val)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\_plotly_utils\basevalidators.py", line 1406, in validate_coerce
    self.raise_invalid_val(v)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\_plotly_utils\basevalidators.py", line 299, in raise_invalid_val
    raise ValueError(
ValueError: 
    Invalid value of type 'builtins.str' received for the 'color' property of layout.annotation.font
        Received value: '#a40000ff'

    The 'color' property is a color and may be specified as:
      - A hex string (e.g. '#ff0000')
      - An rgb/rgba string (e.g. 'rgb(255,0,0)')
      - An hsl/hsla string (e.g. 'hsl(0,100%,50%)')
      - An hsv/hsva string (e.g. 'hsv(0,100%,100%)')
      - A named CSS color:
            aliceblue, antiquewhite, aqua, aquamarine, azure,
            beige, bisque, black, blanchedalmond, blue,
            blueviolet, brown, burlywood, cadetblue,
            chartreuse, chocolate, coral, cornflowerblue,
            cornsilk, crimson, cyan, darkblue, darkcyan,
            darkgoldenrod, darkgray, darkgrey, darkgreen,
            darkkhaki, darkmagenta, darkolivegreen, darkorange,
            darkorchid, darkred, darksalmon, darkseagreen,
            darkslateblue, darkslategray, darkslategrey,
            darkturquoise, darkviolet, deeppink, deepskyblue,
            dimgray, dimgrey, dodgerblue, firebrick,
            floralwhite, forestgreen, fuchsia, gainsboro,
            ghostwhite, gold, goldenrod, gray, grey, green,
            greenyellow, honeydew, hotpink, indianred, indigo,
            ivory, khaki, lavender, lavenderblush, lawngreen,
            lemonchiffon, lightblue, lightcoral, lightcyan,
            lightgoldenrodyellow, lightgray, lightgrey,
            lightgreen, lightpink, lightsalmon, lightseagreen,
            lightskyblue, lightslategray, lightslategrey,
            lightsteelblue, lightyellow, lime, limegreen,
            linen, magenta, maroon, mediumaquamarine,
            mediumblue, mediumorchid, mediumpurple,
            mediumseagreen, mediumslateblue, mediumspringgreen,
            mediumturquoise, mediumvioletred, midnightblue,
            mintcream, mistyrose, moccasin, navajowhite, navy,
            oldlace, olive, olivedrab, orange, orangered,
            orchid, palegoldenrod, palegreen, paleturquoise,
            palevioletred, papayawhip, peachpuff, peru, pink,
            plum, powderblue, purple, red, rosybrown,
            royalblue, rebeccapurple, saddlebrown, salmon,
            sandybrown, seagreen, seashell, sienna, silver,
            skyblue, slateblue, slategray, slategrey, snow,
            springgreen, steelblue, tan, teal, thistle, tomato,
            turquoise, violet, wheat, white, whitesmoke,
            yellow, yellowgreen
2025-04-06 15:37:40 | CRITICAL | Error no controlado: 
    Invalid value of type 'builtins.str' received for the 'color' property of layout.annotation.font
        Received value: '#a40000ff'

    The 'color' property is a color and may be specified as:
      - A hex string (e.g. '#ff0000')
      - An rgb/rgba string (e.g. 'rgb(255,0,0)')
      - An hsl/hsla string (e.g. 'hsl(0,100%,50%)')
      - An hsv/hsva string (e.g. 'hsv(0,100%,100%)')
      - A named CSS color:
            aliceblue, antiquewhite, aqua, aquamarine, azure,
            beige, bisque, black, blanchedalmond, blue,
            blueviolet, brown, burlywood, cadetblue,
            chartreuse, chocolate, coral, cornflowerblue,
            cornsilk, crimson, cyan, darkblue, darkcyan,
            darkgoldenrod, darkgray, darkgrey, darkgreen,
            darkkhaki, darkmagenta, darkolivegreen, darkorange,
            darkorchid, darkred, darksalmon, darkseagreen,
            darkslateblue, darkslategray, darkslategrey,
            darkturquoise, darkviolet, deeppink, deepskyblue,
            dimgray, dimgrey, dodgerblue, firebrick,
            floralwhite, forestgreen, fuchsia, gainsboro,
            ghostwhite, gold, goldenrod, gray, grey, green,
            greenyellow, honeydew, hotpink, indianred, indigo,
            ivory, khaki, lavender, lavenderblush, lawngreen,
            lemonchiffon, lightblue, lightcoral, lightcyan,
            lightgoldenrodyellow, lightgray, lightgrey,
            lightgreen, lightpink, lightsalmon, lightseagreen,
            lightskyblue, lightslategray, lightslategrey,
            lightsteelblue, lightyellow, lime, limegreen,
            linen, magenta, maroon, mediumaquamarine,
            mediumblue, mediumorchid, mediumpurple,
            mediumseagreen, mediumslateblue, mediumspringgreen,
            mediumturquoise, mediumvioletred, midnightblue,
            mintcream, mistyrose, moccasin, navajowhite, navy,
            oldlace, olive, olivedrab, orange, orangered,
            orchid, palegoldenrod, palegreen, paleturquoise,
            palevioletred, papayawhip, peachpuff, peru, pink,
            plum, powderblue, purple, red, rosybrown,
            royalblue, rebeccapurple, saddlebrown, salmon,
            sandybrown, seagreen, seashell, sienna, silver,
            skyblue, slateblue, slategray, slategrey, snow,
            springgreen, steelblue, tan, teal, thistle, tomato,
            turquoise, violet, wheat, white, whitesmoke,
            yellow, yellowgreen
Traceback (most recent call last):
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\programa_gráficas_html.py", line 481, in main
    figuras = generar_graficas_interactivas(df)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\programa_gráficas_html.py", line 229, in generar_graficas_interactivas
    fig3.update_layout(
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\graph_objs\_figure.py", line 787, in update_layout
    return super(Figure, self).update_layout(dict1, overwrite, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 1392, in update_layout
    self.layout.update(dict1, overwrite=overwrite, **kwargs)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 5123, in update
    BaseFigure._perform_update(self, kwargs, overwrite=overwrite)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 3910, in _perform_update
    BaseFigure._perform_update(plotly_obj[key], val)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 3942, in _perform_update
    BaseFigure._perform_update(plotly_element, update_element)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 3905, in _perform_update
    BaseFigure._perform_update(plotly_obj[key], val)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 3926, in _perform_update
    plotly_obj[key] = val
    ~~~~~~~~~~^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 4860, in __setitem__
    self._set_prop(prop, value)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 5204, in _set_prop
    raise err
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 5199, in _set_prop
    val = validator.validate_coerce(val)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\_plotly_utils\basevalidators.py", line 1406, in validate_coerce
    self.raise_invalid_val(v)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\_plotly_utils\basevalidators.py", line 299, in raise_invalid_val
    raise ValueError(
ValueError: 
    Invalid value of type 'builtins.str' received for the 'color' property of layout.annotation.font
        Received value: '#a40000ff'

    The 'color' property is a color and may be specified as:
      - A hex string (e.g. '#ff0000')
      - An rgb/rgba string (e.g. 'rgb(255,0,0)')
      - An hsl/hsla string (e.g. 'hsl(0,100%,50%)')
      - An hsv/hsva string (e.g. 'hsv(0,100%,100%)')
      - A named CSS color:
            aliceblue, antiquewhite, aqua, aquamarine, azure,
            beige, bisque, black, blanchedalmond, blue,
            blueviolet, brown, burlywood, cadetblue,
            chartreuse, chocolate, coral, cornflowerblue,
            cornsilk, crimson, cyan, darkblue, darkcyan,
            darkgoldenrod, darkgray, darkgrey, darkgreen,
            darkkhaki, darkmagenta, darkolivegreen, darkorange,
            darkorchid, darkred, darksalmon, darkseagreen,
            darkslateblue, darkslategray, darkslategrey,
            darkturquoise, darkviolet, deeppink, deepskyblue,
            dimgray, dimgrey, dodgerblue, firebrick,
            floralwhite, forestgreen, fuchsia, gainsboro,
            ghostwhite, gold, goldenrod, gray, grey, green,
            greenyellow, honeydew, hotpink, indianred, indigo,
            ivory, khaki, lavender, lavenderblush, lawngreen,
            lemonchiffon, lightblue, lightcoral, lightcyan,
            lightgoldenrodyellow, lightgray, lightgrey,
            lightgreen, lightpink, lightsalmon, lightseagreen,
            lightskyblue, lightslategray, lightslategrey,
            lightsteelblue, lightyellow, lime, limegreen,
            linen, magenta, maroon, mediumaquamarine,
            mediumblue, mediumorchid, mediumpurple,
            mediumseagreen, mediumslateblue, mediumspringgreen,
            mediumturquoise, mediumvioletred, midnightblue,
            mintcream, mistyrose, moccasin, navajowhite, navy,
            oldlace, olive, olivedrab, orange, orangered,
            orchid, palegoldenrod, palegreen, paleturquoise,
            palevioletred, papayawhip, peachpuff, peru, pink,
            plum, powderblue, purple, red, rosybrown,
            royalblue, rebeccapurple, saddlebrown, salmon,
            sandybrown, seagreen, seashell, sienna, silver,
            skyblue, slateblue, slategray, slategrey, snow,
            springgreen, steelblue, tan, teal, thistle, tomato,
            turquoise, violet, wheat, white, whitesmoke,
            yellow, yellowgreen
2025-04-06 15:38:05 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 15:38:05 | INFO     | Cargando datos desde: datos.csv
2025-04-06 15:38:05 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 15:38:07 | INFO     | Gráficos generados exitosamente
2025-04-06 15:38:07 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 15:38:08 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 15:38:08 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 15:38:09 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 15:38:10 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 15:38:10 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 15:38:11 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 15:38:11 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 15:40:15 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 15:40:15 | INFO     | Cargando datos desde: datos.csv
2025-04-06 15:40:15 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 15:40:16 | INFO     | Gráficos generados exitosamente
2025-04-06 15:40:17 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 15:40:17 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 15:40:18 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 15:40:18 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 15:40:19 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 15:40:20 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 15:40:20 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 15:40:20 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 15:41:47 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 15:41:47 | INFO     | Cargando datos desde: datos.csv
2025-04-06 15:41:47 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 15:41:48 | INFO     | Gráficos generados exitosamente
2025-04-06 15:41:49 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 15:41:49 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 15:41:50 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 15:41:51 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 15:41:51 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 15:41:52 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 15:41:52 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 15:41:52 | INFO     | ==== PROCESO COMPLETADO ====
2025-04-06 15:48:58 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 15:48:58 | INFO     | Cargando datos desde: datos.csv
2025-04-06 15:48:58 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 15:48:59 | ERROR    | Error generando gráficos: Invalid property specified for object of type plotly.graph_objs.layout.Annotation: 'title'

Did you mean "name"?

    Valid properties:
        align
            Sets the horizontal alignment of the `text` within the
            box. Has an effect only if `text` spans two or more
            lines (i.e. `text` contains one or more <br> HTML tags)
            or if an explicit width is set to override the text
            width.
        arrowcolor
            Sets the color of the annotation arrow.
        arrowhead
            Sets the end annotation arrow head style.
        arrowside
            Sets the annotation arrow head position.
        arrowsize
            Sets the size of the end annotation arrow head,
            relative to `arrowwidth`. A value of 1 (default) gives
            a head about 3x as wide as the line.
        arrowwidth
            Sets the width (in px) of annotation arrow line.
        ax
            Sets the x component of the arrow tail about the arrow
            head. If `axref` is `pixel`, a positive (negative)
            component corresponds to an arrow pointing from right
            to left (left to right). If `axref` is not `pixel` and
            is exactly the same as `xref`, this is an absolute
            value on that axis, like `x`, specified in the same
            coordinates as `xref`.
        axref
            Indicates in what coordinates the tail of the
            annotation (ax,ay) is specified. If set to a x axis id
            (e.g. "x" or "x2"), the `x` position refers to a x
            coordinate. If set to "paper", the `x` position refers
            to the distance from the left of the plotting area in
            normalized coordinates where 0 (1) corresponds to the
            left (right). If set to a x axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the left of the
            domain of that axis: e.g., *x2 domain* refers to the
            domain of the second x  axis and a x position of 0.5
            refers to the point between the left and the right of
            the domain of the second x axis. In order for absolute
            positioning of the arrow to work, "axref" must be
            exactly the same as "xref", otherwise "axref" will
            revert to "pixel" (explained next). For relative
            positioning, "axref" can be set to "pixel", in which
            case the "ax" value is specified in pixels relative to
            "x". Absolute positioning is useful for trendline
            annotations which should continue to indicate the
            correct trend when zoomed. Relative positioning is
            useful for specifying the text offset for an annotated
            point.
        ay
            Sets the y component of the arrow tail about the arrow
            head. If `ayref` is `pixel`, a positive (negative)
            component corresponds to an arrow pointing from bottom
            to top (top to bottom). If `ayref` is not `pixel` and
            is exactly the same as `yref`, this is an absolute
            value on that axis, like `y`, specified in the same
            coordinates as `yref`.
        ayref
            Indicates in what coordinates the tail of the
            annotation (ax,ay) is specified. If set to a y axis id
            (e.g. "y" or "y2"), the `y` position refers to a y
            coordinate. If set to "paper", the `y` position refers
            to the distance from the bottom of the plotting area in
            normalized coordinates where 0 (1) corresponds to the
            bottom (top). If set to a y axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the bottom of the
            domain of that axis: e.g., *y2 domain* refers to the
            domain of the second y  axis and a y position of 0.5
            refers to the point between the bottom and the top of
            the domain of the second y axis. In order for absolute
            positioning of the arrow to work, "ayref" must be
            exactly the same as "yref", otherwise "ayref" will
            revert to "pixel" (explained next). For relative
            positioning, "ayref" can be set to "pixel", in which
            case the "ay" value is specified in pixels relative to
            "y". Absolute positioning is useful for trendline
            annotations which should continue to indicate the
            correct trend when zoomed. Relative positioning is
            useful for specifying the text offset for an annotated
            point.
        bgcolor
            Sets the background color of the annotation.
        bordercolor
            Sets the color of the border enclosing the annotation
            `text`.
        borderpad
            Sets the padding (in px) between the `text` and the
            enclosing border.
        borderwidth
            Sets the width (in px) of the border enclosing the
            annotation `text`.
        captureevents
            Determines whether the annotation text box captures
            mouse move and click events, or allows those events to
            pass through to data points in the plot that may be
            behind the annotation. By default `captureevents` is
            False unless `hovertext` is provided. If you use the
            event `plotly_clickannotation` without `hovertext` you
            must explicitly enable `captureevents`.
        clicktoshow
            Makes this annotation respond to clicks on the plot. If
            you click a data point that exactly matches the `x` and
            `y` values of this annotation, and it is hidden
            (visible: false), it will appear. In "onoff" mode, you
            must click the same point again to make it disappear,
            so if you click multiple points, you can show multiple
            annotations. In "onout" mode, a click anywhere else in
            the plot (on another data point or not) will hide this
            annotation. If you need to show/hide this annotation in
            response to different `x` or `y` values, you can set
            `xclick` and/or `yclick`. This is useful for example to
            label the side of a bar. To label markers though,
            `standoff` is preferred over `xclick` and `yclick`.
        font
            Sets the annotation text font.
        height
            Sets an explicit height for the text box. null
            (default) lets the text set the box height. Taller text
            will be clipped.
        hoverlabel
            :class:`plotly.graph_objects.layout.annotation.Hoverlab
            el` instance or dict with compatible properties
        hovertext
            Sets text to appear when hovering over this annotation.
            If omitted or blank, no hover label will appear.
        name
            When used in a template, named items are created in the
            output figure in addition to any items the figure
            already has in this array. You can modify these items
            in the output figure by making your own item with
            `templateitemname` matching this `name` alongside your
            modifications (including `visible: false` or `enabled:
            false` to hide it). Has no effect outside of a
            template.
        opacity
            Sets the opacity of the annotation (text + arrow).
        showarrow
            Determines whether or not the annotation is drawn with
            an arrow. If True, `text` is placed near the arrow's
            tail. If False, `text` lines up with the `x` and `y`
            provided.
        standoff
            Sets a distance, in pixels, to move the end arrowhead
            away from the position it is pointing at, for example
            to point at the edge of a marker independent of zoom.
            Note that this shortens the arrow from the `ax` / `ay`
            vector, in contrast to `xshift` / `yshift` which moves
            everything by this amount.
        startarrowhead
            Sets the start annotation arrow head style.
        startarrowsize
            Sets the size of the start annotation arrow head,
            relative to `arrowwidth`. A value of 1 (default) gives
            a head about 3x as wide as the line.
        startstandoff
            Sets a distance, in pixels, to move the start arrowhead
            away from the position it is pointing at, for example
            to point at the edge of a marker independent of zoom.
            Note that this shortens the arrow from the `ax` / `ay`
            vector, in contrast to `xshift` / `yshift` which moves
            everything by this amount.
        templateitemname
            Used to refer to a named item in this array in the
            template. Named items from the template will be created
            even without a matching item in the input figure, but
            you can modify one by making an item with
            `templateitemname` matching its `name`, alongside your
            modifications (including `visible: false` or `enabled:
            false` to hide it). If there is no template or no
            matching item, this item will be hidden unless you
            explicitly show it with `visible: true`.
        text
            Sets the text associated with this annotation. Plotly
            uses a subset of HTML tags to do things like newline
            (<br>), bold (<b></b>), italics (<i></i>), hyperlinks
            (<a href='...'></a>). Tags <em>, <sup>, <sub>, <s>, <u>
            <span> are also supported.
        textangle
            Sets the angle at which the `text` is drawn with
            respect to the horizontal.
        valign
            Sets the vertical alignment of the `text` within the
            box. Has an effect only if an explicit height is set to
            override the text height.
        visible
            Determines whether or not this annotation is visible.
        width
            Sets an explicit width for the text box. null (default)
            lets the text set the box width. Wider text will be
            clipped. There is no automatic wrapping; use <br> to
            start a new line.
        x
            Sets the annotation's x position. If the axis `type` is
            "log", then you must take the log of your desired
            range. If the axis `type` is "date", it should be date
            strings, like date data, though Date objects and unix
            milliseconds will be accepted and converted to strings.
            If the axis `type` is "category", it should be numbers,
            using the scale where each category is assigned a
            serial number from zero in the order it appears.
        xanchor
            Sets the text box's horizontal position anchor This
            anchor binds the `x` position to the "left", "center"
            or "right" of the annotation. For example, if `x` is
            set to 1, `xref` to "paper" and `xanchor` to "right"
            then the right-most portion of the annotation lines up
            with the right-most edge of the plotting area. If
            "auto", the anchor is equivalent to "center" for data-
            referenced annotations or if there is an arrow, whereas
            for paper-referenced with no arrow, the anchor picked
            corresponds to the closest side.
        xclick
            Toggle this annotation when clicking a data point whose
            `x` value is `xclick` rather than the annotation's `x`
            value.
        xref
            Sets the annotation's x coordinate axis. If set to a x
            axis id (e.g. "x" or "x2"), the `x` position refers to
            a x coordinate. If set to "paper", the `x` position
            refers to the distance from the left of the plotting
            area in normalized coordinates where 0 (1) corresponds
            to the left (right). If set to a x axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the left of the
            domain of that axis: e.g., *x2 domain* refers to the
            domain of the second x  axis and a x position of 0.5
            refers to the point between the left and the right of
            the domain of the second x axis.
        xshift
            Shifts the position of the whole annotation and arrow
            to the right (positive) or left (negative) by this many
            pixels.
        y
            Sets the annotation's y position. If the axis `type` is
            "log", then you must take the log of your desired
            range. If the axis `type` is "date", it should be date
            strings, like date data, though Date objects and unix
            milliseconds will be accepted and converted to strings.
            If the axis `type` is "category", it should be numbers,
            using the scale where each category is assigned a
            serial number from zero in the order it appears.
        yanchor
            Sets the text box's vertical position anchor This
            anchor binds the `y` position to the "top", "middle" or
            "bottom" of the annotation. For example, if `y` is set
            to 1, `yref` to "paper" and `yanchor` to "top" then the
            top-most portion of the annotation lines up with the
            top-most edge of the plotting area. If "auto", the
            anchor is equivalent to "middle" for data-referenced
            annotations or if there is an arrow, whereas for paper-
            referenced with no arrow, the anchor picked corresponds
            to the closest side.
        yclick
            Toggle this annotation when clicking a data point whose
            `y` value is `yclick` rather than the annotation's `y`
            value.
        yref
            Sets the annotation's y coordinate axis. If set to a y
            axis id (e.g. "y" or "y2"), the `y` position refers to
            a y coordinate. If set to "paper", the `y` position
            refers to the distance from the bottom of the plotting
            area in normalized coordinates where 0 (1) corresponds
            to the bottom (top). If set to a y axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the bottom of the
            domain of that axis: e.g., *y2 domain* refers to the
            domain of the second y  axis and a y position of 0.5
            refers to the point between the bottom and the top of
            the domain of the second y axis.
        yshift
            Shifts the position of the whole annotation and arrow
            up (positive) or down (negative) by this many pixels.
        
Did you mean "name"?

Bad property path:
title_text
^^^^^
Traceback (most recent call last):
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\programa_gráficas_html.py", line 268, in generar_graficas_interactivas
    fig4.update_layout(
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\graph_objs\_figure.py", line 787, in update_layout
    return super(Figure, self).update_layout(dict1, overwrite, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 1392, in update_layout
    self.layout.update(dict1, overwrite=overwrite, **kwargs)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 5123, in update
    BaseFigure._perform_update(self, kwargs, overwrite=overwrite)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 3923, in _perform_update
    plotly_obj[key] = val
    ~~~~~~~~~~^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 5898, in __setitem__
    super(BaseLayoutHierarchyType, self).__setitem__(prop, value)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 4856, in __setitem__
    self._set_array_prop(prop, value)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 5337, in _set_array_prop
    val = validator.validate_coerce(val, skip_invalid=self._skip_invalid)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\_plotly_utils\basevalidators.py", line 2596, in validate_coerce
    res.append(self.data_class(v_el, skip_invalid=skip_invalid))
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\graph_objs\layout\_annotation.py", line 2108, in __init__
    self._process_kwargs(**dict(arg, **kwargs))
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 4378, in _process_kwargs
    raise err
ValueError: Invalid property specified for object of type plotly.graph_objs.layout.Annotation: 'title'

Did you mean "name"?

    Valid properties:
        align
            Sets the horizontal alignment of the `text` within the
            box. Has an effect only if `text` spans two or more
            lines (i.e. `text` contains one or more <br> HTML tags)
            or if an explicit width is set to override the text
            width.
        arrowcolor
            Sets the color of the annotation arrow.
        arrowhead
            Sets the end annotation arrow head style.
        arrowside
            Sets the annotation arrow head position.
        arrowsize
            Sets the size of the end annotation arrow head,
            relative to `arrowwidth`. A value of 1 (default) gives
            a head about 3x as wide as the line.
        arrowwidth
            Sets the width (in px) of annotation arrow line.
        ax
            Sets the x component of the arrow tail about the arrow
            head. If `axref` is `pixel`, a positive (negative)
            component corresponds to an arrow pointing from right
            to left (left to right). If `axref` is not `pixel` and
            is exactly the same as `xref`, this is an absolute
            value on that axis, like `x`, specified in the same
            coordinates as `xref`.
        axref
            Indicates in what coordinates the tail of the
            annotation (ax,ay) is specified. If set to a x axis id
            (e.g. "x" or "x2"), the `x` position refers to a x
            coordinate. If set to "paper", the `x` position refers
            to the distance from the left of the plotting area in
            normalized coordinates where 0 (1) corresponds to the
            left (right). If set to a x axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the left of the
            domain of that axis: e.g., *x2 domain* refers to the
            domain of the second x  axis and a x position of 0.5
            refers to the point between the left and the right of
            the domain of the second x axis. In order for absolute
            positioning of the arrow to work, "axref" must be
            exactly the same as "xref", otherwise "axref" will
            revert to "pixel" (explained next). For relative
            positioning, "axref" can be set to "pixel", in which
            case the "ax" value is specified in pixels relative to
            "x". Absolute positioning is useful for trendline
            annotations which should continue to indicate the
            correct trend when zoomed. Relative positioning is
            useful for specifying the text offset for an annotated
            point.
        ay
            Sets the y component of the arrow tail about the arrow
            head. If `ayref` is `pixel`, a positive (negative)
            component corresponds to an arrow pointing from bottom
            to top (top to bottom). If `ayref` is not `pixel` and
            is exactly the same as `yref`, this is an absolute
            value on that axis, like `y`, specified in the same
            coordinates as `yref`.
        ayref
            Indicates in what coordinates the tail of the
            annotation (ax,ay) is specified. If set to a y axis id
            (e.g. "y" or "y2"), the `y` position refers to a y
            coordinate. If set to "paper", the `y` position refers
            to the distance from the bottom of the plotting area in
            normalized coordinates where 0 (1) corresponds to the
            bottom (top). If set to a y axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the bottom of the
            domain of that axis: e.g., *y2 domain* refers to the
            domain of the second y  axis and a y position of 0.5
            refers to the point between the bottom and the top of
            the domain of the second y axis. In order for absolute
            positioning of the arrow to work, "ayref" must be
            exactly the same as "yref", otherwise "ayref" will
            revert to "pixel" (explained next). For relative
            positioning, "ayref" can be set to "pixel", in which
            case the "ay" value is specified in pixels relative to
            "y". Absolute positioning is useful for trendline
            annotations which should continue to indicate the
            correct trend when zoomed. Relative positioning is
            useful for specifying the text offset for an annotated
            point.
        bgcolor
            Sets the background color of the annotation.
        bordercolor
            Sets the color of the border enclosing the annotation
            `text`.
        borderpad
            Sets the padding (in px) between the `text` and the
            enclosing border.
        borderwidth
            Sets the width (in px) of the border enclosing the
            annotation `text`.
        captureevents
            Determines whether the annotation text box captures
            mouse move and click events, or allows those events to
            pass through to data points in the plot that may be
            behind the annotation. By default `captureevents` is
            False unless `hovertext` is provided. If you use the
            event `plotly_clickannotation` without `hovertext` you
            must explicitly enable `captureevents`.
        clicktoshow
            Makes this annotation respond to clicks on the plot. If
            you click a data point that exactly matches the `x` and
            `y` values of this annotation, and it is hidden
            (visible: false), it will appear. In "onoff" mode, you
            must click the same point again to make it disappear,
            so if you click multiple points, you can show multiple
            annotations. In "onout" mode, a click anywhere else in
            the plot (on another data point or not) will hide this
            annotation. If you need to show/hide this annotation in
            response to different `x` or `y` values, you can set
            `xclick` and/or `yclick`. This is useful for example to
            label the side of a bar. To label markers though,
            `standoff` is preferred over `xclick` and `yclick`.
        font
            Sets the annotation text font.
        height
            Sets an explicit height for the text box. null
            (default) lets the text set the box height. Taller text
            will be clipped.
        hoverlabel
            :class:`plotly.graph_objects.layout.annotation.Hoverlab
            el` instance or dict with compatible properties
        hovertext
            Sets text to appear when hovering over this annotation.
            If omitted or blank, no hover label will appear.
        name
            When used in a template, named items are created in the
            output figure in addition to any items the figure
            already has in this array. You can modify these items
            in the output figure by making your own item with
            `templateitemname` matching this `name` alongside your
            modifications (including `visible: false` or `enabled:
            false` to hide it). Has no effect outside of a
            template.
        opacity
            Sets the opacity of the annotation (text + arrow).
        showarrow
            Determines whether or not the annotation is drawn with
            an arrow. If True, `text` is placed near the arrow's
            tail. If False, `text` lines up with the `x` and `y`
            provided.
        standoff
            Sets a distance, in pixels, to move the end arrowhead
            away from the position it is pointing at, for example
            to point at the edge of a marker independent of zoom.
            Note that this shortens the arrow from the `ax` / `ay`
            vector, in contrast to `xshift` / `yshift` which moves
            everything by this amount.
        startarrowhead
            Sets the start annotation arrow head style.
        startarrowsize
            Sets the size of the start annotation arrow head,
            relative to `arrowwidth`. A value of 1 (default) gives
            a head about 3x as wide as the line.
        startstandoff
            Sets a distance, in pixels, to move the start arrowhead
            away from the position it is pointing at, for example
            to point at the edge of a marker independent of zoom.
            Note that this shortens the arrow from the `ax` / `ay`
            vector, in contrast to `xshift` / `yshift` which moves
            everything by this amount.
        templateitemname
            Used to refer to a named item in this array in the
            template. Named items from the template will be created
            even without a matching item in the input figure, but
            you can modify one by making an item with
            `templateitemname` matching its `name`, alongside your
            modifications (including `visible: false` or `enabled:
            false` to hide it). If there is no template or no
            matching item, this item will be hidden unless you
            explicitly show it with `visible: true`.
        text
            Sets the text associated with this annotation. Plotly
            uses a subset of HTML tags to do things like newline
            (<br>), bold (<b></b>), italics (<i></i>), hyperlinks
            (<a href='...'></a>). Tags <em>, <sup>, <sub>, <s>, <u>
            <span> are also supported.
        textangle
            Sets the angle at which the `text` is drawn with
            respect to the horizontal.
        valign
            Sets the vertical alignment of the `text` within the
            box. Has an effect only if an explicit height is set to
            override the text height.
        visible
            Determines whether or not this annotation is visible.
        width
            Sets an explicit width for the text box. null (default)
            lets the text set the box width. Wider text will be
            clipped. There is no automatic wrapping; use <br> to
            start a new line.
        x
            Sets the annotation's x position. If the axis `type` is
            "log", then you must take the log of your desired
            range. If the axis `type` is "date", it should be date
            strings, like date data, though Date objects and unix
            milliseconds will be accepted and converted to strings.
            If the axis `type` is "category", it should be numbers,
            using the scale where each category is assigned a
            serial number from zero in the order it appears.
        xanchor
            Sets the text box's horizontal position anchor This
            anchor binds the `x` position to the "left", "center"
            or "right" of the annotation. For example, if `x` is
            set to 1, `xref` to "paper" and `xanchor` to "right"
            then the right-most portion of the annotation lines up
            with the right-most edge of the plotting area. If
            "auto", the anchor is equivalent to "center" for data-
            referenced annotations or if there is an arrow, whereas
            for paper-referenced with no arrow, the anchor picked
            corresponds to the closest side.
        xclick
            Toggle this annotation when clicking a data point whose
            `x` value is `xclick` rather than the annotation's `x`
            value.
        xref
            Sets the annotation's x coordinate axis. If set to a x
            axis id (e.g. "x" or "x2"), the `x` position refers to
            a x coordinate. If set to "paper", the `x` position
            refers to the distance from the left of the plotting
            area in normalized coordinates where 0 (1) corresponds
            to the left (right). If set to a x axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the left of the
            domain of that axis: e.g., *x2 domain* refers to the
            domain of the second x  axis and a x position of 0.5
            refers to the point between the left and the right of
            the domain of the second x axis.
        xshift
            Shifts the position of the whole annotation and arrow
            to the right (positive) or left (negative) by this many
            pixels.
        y
            Sets the annotation's y position. If the axis `type` is
            "log", then you must take the log of your desired
            range. If the axis `type` is "date", it should be date
            strings, like date data, though Date objects and unix
            milliseconds will be accepted and converted to strings.
            If the axis `type` is "category", it should be numbers,
            using the scale where each category is assigned a
            serial number from zero in the order it appears.
        yanchor
            Sets the text box's vertical position anchor This
            anchor binds the `y` position to the "top", "middle" or
            "bottom" of the annotation. For example, if `y` is set
            to 1, `yref` to "paper" and `yanchor` to "top" then the
            top-most portion of the annotation lines up with the
            top-most edge of the plotting area. If "auto", the
            anchor is equivalent to "middle" for data-referenced
            annotations or if there is an arrow, whereas for paper-
            referenced with no arrow, the anchor picked corresponds
            to the closest side.
        yclick
            Toggle this annotation when clicking a data point whose
            `y` value is `yclick` rather than the annotation's `y`
            value.
        yref
            Sets the annotation's y coordinate axis. If set to a y
            axis id (e.g. "y" or "y2"), the `y` position refers to
            a y coordinate. If set to "paper", the `y` position
            refers to the distance from the bottom of the plotting
            area in normalized coordinates where 0 (1) corresponds
            to the bottom (top). If set to a y axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the bottom of the
            domain of that axis: e.g., *y2 domain* refers to the
            domain of the second y  axis and a y position of 0.5
            refers to the point between the bottom and the top of
            the domain of the second y axis.
        yshift
            Shifts the position of the whole annotation and arrow
            up (positive) or down (negative) by this many pixels.
        
Did you mean "name"?

Bad property path:
title_text
^^^^^
2025-04-06 15:48:59 | CRITICAL | Error no controlado: Invalid property specified for object of type plotly.graph_objs.layout.Annotation: 'title'

Did you mean "name"?

    Valid properties:
        align
            Sets the horizontal alignment of the `text` within the
            box. Has an effect only if `text` spans two or more
            lines (i.e. `text` contains one or more <br> HTML tags)
            or if an explicit width is set to override the text
            width.
        arrowcolor
            Sets the color of the annotation arrow.
        arrowhead
            Sets the end annotation arrow head style.
        arrowside
            Sets the annotation arrow head position.
        arrowsize
            Sets the size of the end annotation arrow head,
            relative to `arrowwidth`. A value of 1 (default) gives
            a head about 3x as wide as the line.
        arrowwidth
            Sets the width (in px) of annotation arrow line.
        ax
            Sets the x component of the arrow tail about the arrow
            head. If `axref` is `pixel`, a positive (negative)
            component corresponds to an arrow pointing from right
            to left (left to right). If `axref` is not `pixel` and
            is exactly the same as `xref`, this is an absolute
            value on that axis, like `x`, specified in the same
            coordinates as `xref`.
        axref
            Indicates in what coordinates the tail of the
            annotation (ax,ay) is specified. If set to a x axis id
            (e.g. "x" or "x2"), the `x` position refers to a x
            coordinate. If set to "paper", the `x` position refers
            to the distance from the left of the plotting area in
            normalized coordinates where 0 (1) corresponds to the
            left (right). If set to a x axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the left of the
            domain of that axis: e.g., *x2 domain* refers to the
            domain of the second x  axis and a x position of 0.5
            refers to the point between the left and the right of
            the domain of the second x axis. In order for absolute
            positioning of the arrow to work, "axref" must be
            exactly the same as "xref", otherwise "axref" will
            revert to "pixel" (explained next). For relative
            positioning, "axref" can be set to "pixel", in which
            case the "ax" value is specified in pixels relative to
            "x". Absolute positioning is useful for trendline
            annotations which should continue to indicate the
            correct trend when zoomed. Relative positioning is
            useful for specifying the text offset for an annotated
            point.
        ay
            Sets the y component of the arrow tail about the arrow
            head. If `ayref` is `pixel`, a positive (negative)
            component corresponds to an arrow pointing from bottom
            to top (top to bottom). If `ayref` is not `pixel` and
            is exactly the same as `yref`, this is an absolute
            value on that axis, like `y`, specified in the same
            coordinates as `yref`.
        ayref
            Indicates in what coordinates the tail of the
            annotation (ax,ay) is specified. If set to a y axis id
            (e.g. "y" or "y2"), the `y` position refers to a y
            coordinate. If set to "paper", the `y` position refers
            to the distance from the bottom of the plotting area in
            normalized coordinates where 0 (1) corresponds to the
            bottom (top). If set to a y axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the bottom of the
            domain of that axis: e.g., *y2 domain* refers to the
            domain of the second y  axis and a y position of 0.5
            refers to the point between the bottom and the top of
            the domain of the second y axis. In order for absolute
            positioning of the arrow to work, "ayref" must be
            exactly the same as "yref", otherwise "ayref" will
            revert to "pixel" (explained next). For relative
            positioning, "ayref" can be set to "pixel", in which
            case the "ay" value is specified in pixels relative to
            "y". Absolute positioning is useful for trendline
            annotations which should continue to indicate the
            correct trend when zoomed. Relative positioning is
            useful for specifying the text offset for an annotated
            point.
        bgcolor
            Sets the background color of the annotation.
        bordercolor
            Sets the color of the border enclosing the annotation
            `text`.
        borderpad
            Sets the padding (in px) between the `text` and the
            enclosing border.
        borderwidth
            Sets the width (in px) of the border enclosing the
            annotation `text`.
        captureevents
            Determines whether the annotation text box captures
            mouse move and click events, or allows those events to
            pass through to data points in the plot that may be
            behind the annotation. By default `captureevents` is
            False unless `hovertext` is provided. If you use the
            event `plotly_clickannotation` without `hovertext` you
            must explicitly enable `captureevents`.
        clicktoshow
            Makes this annotation respond to clicks on the plot. If
            you click a data point that exactly matches the `x` and
            `y` values of this annotation, and it is hidden
            (visible: false), it will appear. In "onoff" mode, you
            must click the same point again to make it disappear,
            so if you click multiple points, you can show multiple
            annotations. In "onout" mode, a click anywhere else in
            the plot (on another data point or not) will hide this
            annotation. If you need to show/hide this annotation in
            response to different `x` or `y` values, you can set
            `xclick` and/or `yclick`. This is useful for example to
            label the side of a bar. To label markers though,
            `standoff` is preferred over `xclick` and `yclick`.
        font
            Sets the annotation text font.
        height
            Sets an explicit height for the text box. null
            (default) lets the text set the box height. Taller text
            will be clipped.
        hoverlabel
            :class:`plotly.graph_objects.layout.annotation.Hoverlab
            el` instance or dict with compatible properties
        hovertext
            Sets text to appear when hovering over this annotation.
            If omitted or blank, no hover label will appear.
        name
            When used in a template, named items are created in the
            output figure in addition to any items the figure
            already has in this array. You can modify these items
            in the output figure by making your own item with
            `templateitemname` matching this `name` alongside your
            modifications (including `visible: false` or `enabled:
            false` to hide it). Has no effect outside of a
            template.
        opacity
            Sets the opacity of the annotation (text + arrow).
        showarrow
            Determines whether or not the annotation is drawn with
            an arrow. If True, `text` is placed near the arrow's
            tail. If False, `text` lines up with the `x` and `y`
            provided.
        standoff
            Sets a distance, in pixels, to move the end arrowhead
            away from the position it is pointing at, for example
            to point at the edge of a marker independent of zoom.
            Note that this shortens the arrow from the `ax` / `ay`
            vector, in contrast to `xshift` / `yshift` which moves
            everything by this amount.
        startarrowhead
            Sets the start annotation arrow head style.
        startarrowsize
            Sets the size of the start annotation arrow head,
            relative to `arrowwidth`. A value of 1 (default) gives
            a head about 3x as wide as the line.
        startstandoff
            Sets a distance, in pixels, to move the start arrowhead
            away from the position it is pointing at, for example
            to point at the edge of a marker independent of zoom.
            Note that this shortens the arrow from the `ax` / `ay`
            vector, in contrast to `xshift` / `yshift` which moves
            everything by this amount.
        templateitemname
            Used to refer to a named item in this array in the
            template. Named items from the template will be created
            even without a matching item in the input figure, but
            you can modify one by making an item with
            `templateitemname` matching its `name`, alongside your
            modifications (including `visible: false` or `enabled:
            false` to hide it). If there is no template or no
            matching item, this item will be hidden unless you
            explicitly show it with `visible: true`.
        text
            Sets the text associated with this annotation. Plotly
            uses a subset of HTML tags to do things like newline
            (<br>), bold (<b></b>), italics (<i></i>), hyperlinks
            (<a href='...'></a>). Tags <em>, <sup>, <sub>, <s>, <u>
            <span> are also supported.
        textangle
            Sets the angle at which the `text` is drawn with
            respect to the horizontal.
        valign
            Sets the vertical alignment of the `text` within the
            box. Has an effect only if an explicit height is set to
            override the text height.
        visible
            Determines whether or not this annotation is visible.
        width
            Sets an explicit width for the text box. null (default)
            lets the text set the box width. Wider text will be
            clipped. There is no automatic wrapping; use <br> to
            start a new line.
        x
            Sets the annotation's x position. If the axis `type` is
            "log", then you must take the log of your desired
            range. If the axis `type` is "date", it should be date
            strings, like date data, though Date objects and unix
            milliseconds will be accepted and converted to strings.
            If the axis `type` is "category", it should be numbers,
            using the scale where each category is assigned a
            serial number from zero in the order it appears.
        xanchor
            Sets the text box's horizontal position anchor This
            anchor binds the `x` position to the "left", "center"
            or "right" of the annotation. For example, if `x` is
            set to 1, `xref` to "paper" and `xanchor` to "right"
            then the right-most portion of the annotation lines up
            with the right-most edge of the plotting area. If
            "auto", the anchor is equivalent to "center" for data-
            referenced annotations or if there is an arrow, whereas
            for paper-referenced with no arrow, the anchor picked
            corresponds to the closest side.
        xclick
            Toggle this annotation when clicking a data point whose
            `x` value is `xclick` rather than the annotation's `x`
            value.
        xref
            Sets the annotation's x coordinate axis. If set to a x
            axis id (e.g. "x" or "x2"), the `x` position refers to
            a x coordinate. If set to "paper", the `x` position
            refers to the distance from the left of the plotting
            area in normalized coordinates where 0 (1) corresponds
            to the left (right). If set to a x axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the left of the
            domain of that axis: e.g., *x2 domain* refers to the
            domain of the second x  axis and a x position of 0.5
            refers to the point between the left and the right of
            the domain of the second x axis.
        xshift
            Shifts the position of the whole annotation and arrow
            to the right (positive) or left (negative) by this many
            pixels.
        y
            Sets the annotation's y position. If the axis `type` is
            "log", then you must take the log of your desired
            range. If the axis `type` is "date", it should be date
            strings, like date data, though Date objects and unix
            milliseconds will be accepted and converted to strings.
            If the axis `type` is "category", it should be numbers,
            using the scale where each category is assigned a
            serial number from zero in the order it appears.
        yanchor
            Sets the text box's vertical position anchor This
            anchor binds the `y` position to the "top", "middle" or
            "bottom" of the annotation. For example, if `y` is set
            to 1, `yref` to "paper" and `yanchor` to "top" then the
            top-most portion of the annotation lines up with the
            top-most edge of the plotting area. If "auto", the
            anchor is equivalent to "middle" for data-referenced
            annotations or if there is an arrow, whereas for paper-
            referenced with no arrow, the anchor picked corresponds
            to the closest side.
        yclick
            Toggle this annotation when clicking a data point whose
            `y` value is `yclick` rather than the annotation's `y`
            value.
        yref
            Sets the annotation's y coordinate axis. If set to a y
            axis id (e.g. "y" or "y2"), the `y` position refers to
            a y coordinate. If set to "paper", the `y` position
            refers to the distance from the bottom of the plotting
            area in normalized coordinates where 0 (1) corresponds
            to the bottom (top). If set to a y axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the bottom of the
            domain of that axis: e.g., *y2 domain* refers to the
            domain of the second y  axis and a y position of 0.5
            refers to the point between the bottom and the top of
            the domain of the second y axis.
        yshift
            Shifts the position of the whole annotation and arrow
            up (positive) or down (negative) by this many pixels.
        
Did you mean "name"?

Bad property path:
title_text
^^^^^
Traceback (most recent call last):
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\programa_gráficas_html.py", line 484, in main
    figuras = generar_graficas_interactivas(df)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "c:\Users\Carlos\Documents\GitHub\Programas tratamiento CanSat\programa_gráficas_html.py", line 268, in generar_graficas_interactivas
    fig4.update_layout(
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\graph_objs\_figure.py", line 787, in update_layout
    return super(Figure, self).update_layout(dict1, overwrite, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 1392, in update_layout
    self.layout.update(dict1, overwrite=overwrite, **kwargs)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 5123, in update
    BaseFigure._perform_update(self, kwargs, overwrite=overwrite)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 3923, in _perform_update
    plotly_obj[key] = val
    ~~~~~~~~~~^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 5898, in __setitem__
    super(BaseLayoutHierarchyType, self).__setitem__(prop, value)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 4856, in __setitem__
    self._set_array_prop(prop, value)
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 5337, in _set_array_prop
    val = validator.validate_coerce(val, skip_invalid=self._skip_invalid)
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\_plotly_utils\basevalidators.py", line 2596, in validate_coerce
    res.append(self.data_class(v_el, skip_invalid=skip_invalid))
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\graph_objs\layout\_annotation.py", line 2108, in __init__
    self._process_kwargs(**dict(arg, **kwargs))
  File "C:\Users\Carlos\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\plotly\basedatatypes.py", line 4378, in _process_kwargs
    raise err
ValueError: Invalid property specified for object of type plotly.graph_objs.layout.Annotation: 'title'

Did you mean "name"?

    Valid properties:
        align
            Sets the horizontal alignment of the `text` within the
            box. Has an effect only if `text` spans two or more
            lines (i.e. `text` contains one or more <br> HTML tags)
            or if an explicit width is set to override the text
            width.
        arrowcolor
            Sets the color of the annotation arrow.
        arrowhead
            Sets the end annotation arrow head style.
        arrowside
            Sets the annotation arrow head position.
        arrowsize
            Sets the size of the end annotation arrow head,
            relative to `arrowwidth`. A value of 1 (default) gives
            a head about 3x as wide as the line.
        arrowwidth
            Sets the width (in px) of annotation arrow line.
        ax
            Sets the x component of the arrow tail about the arrow
            head. If `axref` is `pixel`, a positive (negative)
            component corresponds to an arrow pointing from right
            to left (left to right). If `axref` is not `pixel` and
            is exactly the same as `xref`, this is an absolute
            value on that axis, like `x`, specified in the same
            coordinates as `xref`.
        axref
            Indicates in what coordinates the tail of the
            annotation (ax,ay) is specified. If set to a x axis id
            (e.g. "x" or "x2"), the `x` position refers to a x
            coordinate. If set to "paper", the `x` position refers
            to the distance from the left of the plotting area in
            normalized coordinates where 0 (1) corresponds to the
            left (right). If set to a x axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the left of the
            domain of that axis: e.g., *x2 domain* refers to the
            domain of the second x  axis and a x position of 0.5
            refers to the point between the left and the right of
            the domain of the second x axis. In order for absolute
            positioning of the arrow to work, "axref" must be
            exactly the same as "xref", otherwise "axref" will
            revert to "pixel" (explained next). For relative
            positioning, "axref" can be set to "pixel", in which
            case the "ax" value is specified in pixels relative to
            "x". Absolute positioning is useful for trendline
            annotations which should continue to indicate the
            correct trend when zoomed. Relative positioning is
            useful for specifying the text offset for an annotated
            point.
        ay
            Sets the y component of the arrow tail about the arrow
            head. If `ayref` is `pixel`, a positive (negative)
            component corresponds to an arrow pointing from bottom
            to top (top to bottom). If `ayref` is not `pixel` and
            is exactly the same as `yref`, this is an absolute
            value on that axis, like `y`, specified in the same
            coordinates as `yref`.
        ayref
            Indicates in what coordinates the tail of the
            annotation (ax,ay) is specified. If set to a y axis id
            (e.g. "y" or "y2"), the `y` position refers to a y
            coordinate. If set to "paper", the `y` position refers
            to the distance from the bottom of the plotting area in
            normalized coordinates where 0 (1) corresponds to the
            bottom (top). If set to a y axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the bottom of the
            domain of that axis: e.g., *y2 domain* refers to the
            domain of the second y  axis and a y position of 0.5
            refers to the point between the bottom and the top of
            the domain of the second y axis. In order for absolute
            positioning of the arrow to work, "ayref" must be
            exactly the same as "yref", otherwise "ayref" will
            revert to "pixel" (explained next). For relative
            positioning, "ayref" can be set to "pixel", in which
            case the "ay" value is specified in pixels relative to
            "y". Absolute positioning is useful for trendline
            annotations which should continue to indicate the
            correct trend when zoomed. Relative positioning is
            useful for specifying the text offset for an annotated
            point.
        bgcolor
            Sets the background color of the annotation.
        bordercolor
            Sets the color of the border enclosing the annotation
            `text`.
        borderpad
            Sets the padding (in px) between the `text` and the
            enclosing border.
        borderwidth
            Sets the width (in px) of the border enclosing the
            annotation `text`.
        captureevents
            Determines whether the annotation text box captures
            mouse move and click events, or allows those events to
            pass through to data points in the plot that may be
            behind the annotation. By default `captureevents` is
            False unless `hovertext` is provided. If you use the
            event `plotly_clickannotation` without `hovertext` you
            must explicitly enable `captureevents`.
        clicktoshow
            Makes this annotation respond to clicks on the plot. If
            you click a data point that exactly matches the `x` and
            `y` values of this annotation, and it is hidden
            (visible: false), it will appear. In "onoff" mode, you
            must click the same point again to make it disappear,
            so if you click multiple points, you can show multiple
            annotations. In "onout" mode, a click anywhere else in
            the plot (on another data point or not) will hide this
            annotation. If you need to show/hide this annotation in
            response to different `x` or `y` values, you can set
            `xclick` and/or `yclick`. This is useful for example to
            label the side of a bar. To label markers though,
            `standoff` is preferred over `xclick` and `yclick`.
        font
            Sets the annotation text font.
        height
            Sets an explicit height for the text box. null
            (default) lets the text set the box height. Taller text
            will be clipped.
        hoverlabel
            :class:`plotly.graph_objects.layout.annotation.Hoverlab
            el` instance or dict with compatible properties
        hovertext
            Sets text to appear when hovering over this annotation.
            If omitted or blank, no hover label will appear.
        name
            When used in a template, named items are created in the
            output figure in addition to any items the figure
            already has in this array. You can modify these items
            in the output figure by making your own item with
            `templateitemname` matching this `name` alongside your
            modifications (including `visible: false` or `enabled:
            false` to hide it). Has no effect outside of a
            template.
        opacity
            Sets the opacity of the annotation (text + arrow).
        showarrow
            Determines whether or not the annotation is drawn with
            an arrow. If True, `text` is placed near the arrow's
            tail. If False, `text` lines up with the `x` and `y`
            provided.
        standoff
            Sets a distance, in pixels, to move the end arrowhead
            away from the position it is pointing at, for example
            to point at the edge of a marker independent of zoom.
            Note that this shortens the arrow from the `ax` / `ay`
            vector, in contrast to `xshift` / `yshift` which moves
            everything by this amount.
        startarrowhead
            Sets the start annotation arrow head style.
        startarrowsize
            Sets the size of the start annotation arrow head,
            relative to `arrowwidth`. A value of 1 (default) gives
            a head about 3x as wide as the line.
        startstandoff
            Sets a distance, in pixels, to move the start arrowhead
            away from the position it is pointing at, for example
            to point at the edge of a marker independent of zoom.
            Note that this shortens the arrow from the `ax` / `ay`
            vector, in contrast to `xshift` / `yshift` which moves
            everything by this amount.
        templateitemname
            Used to refer to a named item in this array in the
            template. Named items from the template will be created
            even without a matching item in the input figure, but
            you can modify one by making an item with
            `templateitemname` matching its `name`, alongside your
            modifications (including `visible: false` or `enabled:
            false` to hide it). If there is no template or no
            matching item, this item will be hidden unless you
            explicitly show it with `visible: true`.
        text
            Sets the text associated with this annotation. Plotly
            uses a subset of HTML tags to do things like newline
            (<br>), bold (<b></b>), italics (<i></i>), hyperlinks
            (<a href='...'></a>). Tags <em>, <sup>, <sub>, <s>, <u>
            <span> are also supported.
        textangle
            Sets the angle at which the `text` is drawn with
            respect to the horizontal.
        valign
            Sets the vertical alignment of the `text` within the
            box. Has an effect only if an explicit height is set to
            override the text height.
        visible
            Determines whether or not this annotation is visible.
        width
            Sets an explicit width for the text box. null (default)
            lets the text set the box width. Wider text will be
            clipped. There is no automatic wrapping; use <br> to
            start a new line.
        x
            Sets the annotation's x position. If the axis `type` is
            "log", then you must take the log of your desired
            range. If the axis `type` is "date", it should be date
            strings, like date data, though Date objects and unix
            milliseconds will be accepted and converted to strings.
            If the axis `type` is "category", it should be numbers,
            using the scale where each category is assigned a
            serial number from zero in the order it appears.
        xanchor
            Sets the text box's horizontal position anchor This
            anchor binds the `x` position to the "left", "center"
            or "right" of the annotation. For example, if `x` is
            set to 1, `xref` to "paper" and `xanchor` to "right"
            then the right-most portion of the annotation lines up
            with the right-most edge of the plotting area. If
            "auto", the anchor is equivalent to "center" for data-
            referenced annotations or if there is an arrow, whereas
            for paper-referenced with no arrow, the anchor picked
            corresponds to the closest side.
        xclick
            Toggle this annotation when clicking a data point whose
            `x` value is `xclick` rather than the annotation's `x`
            value.
        xref
            Sets the annotation's x coordinate axis. If set to a x
            axis id (e.g. "x" or "x2"), the `x` position refers to
            a x coordinate. If set to "paper", the `x` position
            refers to the distance from the left of the plotting
            area in normalized coordinates where 0 (1) corresponds
            to the left (right). If set to a x axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the left of the
            domain of that axis: e.g., *x2 domain* refers to the
            domain of the second x  axis and a x position of 0.5
            refers to the point between the left and the right of
            the domain of the second x axis.
        xshift
            Shifts the position of the whole annotation and arrow
            to the right (positive) or left (negative) by this many
            pixels.
        y
            Sets the annotation's y position. If the axis `type` is
            "log", then you must take the log of your desired
            range. If the axis `type` is "date", it should be date
            strings, like date data, though Date objects and unix
            milliseconds will be accepted and converted to strings.
            If the axis `type` is "category", it should be numbers,
            using the scale where each category is assigned a
            serial number from zero in the order it appears.
        yanchor
            Sets the text box's vertical position anchor This
            anchor binds the `y` position to the "top", "middle" or
            "bottom" of the annotation. For example, if `y` is set
            to 1, `yref` to "paper" and `yanchor` to "top" then the
            top-most portion of the annotation lines up with the
            top-most edge of the plotting area. If "auto", the
            anchor is equivalent to "middle" for data-referenced
            annotations or if there is an arrow, whereas for paper-
            referenced with no arrow, the anchor picked corresponds
            to the closest side.
        yclick
            Toggle this annotation when clicking a data point whose
            `y` value is `yclick` rather than the annotation's `y`
            value.
        yref
            Sets the annotation's y coordinate axis. If set to a y
            axis id (e.g. "y" or "y2"), the `y` position refers to
            a y coordinate. If set to "paper", the `y` position
            refers to the distance from the bottom of the plotting
            area in normalized coordinates where 0 (1) corresponds
            to the bottom (top). If set to a y axis ID followed by
            "domain" (separated by a space), the position behaves
            like for "paper", but refers to the distance in
            fractions of the domain length from the bottom of the
            domain of that axis: e.g., *y2 domain* refers to the
            domain of the second y  axis and a y position of 0.5
            refers to the point between the bottom and the top of
            the domain of the second y axis.
        yshift
            Shifts the position of the whole annotation and arrow
            up (positive) or down (negative) by this many pixels.
        
Did you mean "name"?

Bad property path:
title_text
^^^^^
2025-04-06 15:50:44 | INFO     | ==== INICIO DEL PROCESO ====
2025-04-06 15:50:44 | INFO     | Cargando datos desde: datos.csv
2025-04-06 15:50:44 | INFO     | Datos cargados correctamente. Muestras: 1297
2025-04-06 15:50:46 | INFO     | Gráficos generados exitosamente
2025-04-06 15:50:46 | INFO     | Gráfico guardado: graficos/altitud_presion.html
2025-04-06 15:50:47 | INFO     | Gráfico guardado: graficos/trayectoria_3d.html
2025-04-06 15:50:47 | INFO     | Gráfico guardado: graficos/panel_sensores.html
2025-04-06 15:50:48 | INFO     | Gráfico guardado: graficos/matriz_correlacion.html
2025-04-06 15:50:49 | INFO     | Gráfico guardado: graficos/scatter_altitud_presion.html
2025-04-06 15:50:49 | INFO     | Gráfico guardado: graficos/scatter_altitud_temp.html
2025-04-06 15:50:50 | INFO     | Gráfico guardado: graficos/scatter_temp_presion.html
2025-04-06 15:50:50 | INFO     | ==== PROCESO COMPLETADO ====
